import 'package:flutter/material.dart';

const textInputDecoration = InputDecoration(
  filled: true,
  enabledBorder: OutlineInputBorder(
    borderSide: BorderSide(width: 3.0),
  ),
  focusedBorder: OutlineInputBorder(borderSide: BorderSide(width: 3.0)),
);

class AddNewBook extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Add New Book"),
      ),
      body: SingleChildScrollView(
        child: Container(
          padding: EdgeInsets.symmetric(vertical: 20.0, horizontal: 50.0),
          child: Form(
              child: Column(
            children: <Widget>[
              SizedBox(
                height: 20.0,
              ),
              TextFormField(
                decoration:
                    textInputDecoration.copyWith(labelText: "Book Title"),
                // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
                //   setState(()=>)
                // },
              ),
              SizedBox(
                height: 20.0,
              ),
              TextFormField(
                decoration:
                    textInputDecoration.copyWith(labelText: "Book ISBN Code"),
                // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
                //   setState(()=>)
                // },
              ),
              SizedBox(
                height: 20.0,
              ),
              TextFormField(
                decoration:
                    textInputDecoration.copyWith(labelText: "Description"),
                // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
                //   setState(()=>)
                // },
              ),
              SizedBox(
                height: 20.0,
              ),
              TextFormField(
                decoration:
                    textInputDecoration.copyWith(labelText: "Book Author"),
                // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
                //   setState(()=>)
                // },
              ),
              SizedBox(
                height: 20.0,
              ),
              TextFormField(
                decoration:
                    textInputDecoration.copyWith(labelText: "Book Publisher"),
                // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
                //   setState(()=>)
                // },
              ),
              // SizedBox(
              //   height: 20.0,
              // ),
              // TextFormField(
              //   decoration:
              //       textInputDecoration.copyWith(labelText: "Publish Date"),
              //   // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
              //   //   setState(()=>)
              //   // },
              // ),
              // SizedBox(
              //   height: 20.0,
              // ),
              // TextFormField(
              //   decoration: textInputDecoration.copyWith(labelText: "Book Image"),
              //   // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
              //   //   setState(()=>)
              //   // },
              // ),
              // SizedBox(
              //   height: 20.0,
              // ),
              // TextFormField(
              //   decoration: textInputDecoration.copyWith(labelText: "Barcode"),
              //   // validator: (val) => val.isEmpty ? 'Please enter Book Title' : null, onChanged: (val) {
              //   //   setState(()=>)
              //   // },
              // ),
            ],
          )),
        ),
      ),
    );
  }
}




Padding(
                  padding: EdgeInsets.all(20),
                  child: Row(
                    children: <Widget>[
                      Expanded(
                          child: TextField(
                              decoration: InputDecoration(
                                  labelText: "Book Genre",
                                  enabledBorder: OutlineInputBorder(
                                      borderSide: BorderSide(
                                          color:
                                              Theme.of(context).accentColor)),
                                  focusedBorder: OutlineInputBorder(
                                      borderSide: BorderSide(
                                          color:
                                              Theme.of(context).accentColor))
                                              ),
                              controller: _controller)),
                      PopupMenuButton<String>(
                        icon: const Icon(Icons.arrow_drop_down),
                        onSelected: (String value) {
                          _controller.text = value;
                        },
                        itemBuilder: (BuildContext context) {
                          return bookGenre
                              .map<PopupMenuItem<String>>((String value) {
                            return PopupMenuItem(
                                child: Text(value), value: value);
                          }).toList();
                        },
                      ),
                    ],
                  ),
                ),


                FormField<String>(
          builder: (FormFieldState<String> state) {
            return InputDecorator(
              decoration: InputDecoration(
                  labelStyle: textStyle,
                  errorStyle: TextStyle(color: Colors.redAccent, fontSize: 16.0),
                  hintText: 'Please select expense',
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(5.0))),
              isEmpty: _currentSelectedValue == '',
              child: DropdownButtonHideUnderline(
                child: DropdownButton<String>(
                  value: _currentSelectedValue,
                  isDense: true,
                  onChanged: (String newValue) {
                    setState(() {
                      _currentSelectedValue = newValue;
                      state.didChange(newValue);
                    });
                  },
                  items: _currencies.map((String value) {
                    return DropdownMenuItem<String>(
                      value: value,
                      child: Text(value),
                    );
                  }).toList(),
                ),
              ),
            );
          },
        )
